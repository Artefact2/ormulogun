#!/usr/bin/env php
<?php
/* Copyright 2018 Romain "Artefact2" Dal Maso <artefact2@gmail.com>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

if($argc < 2 || $argc > 3) {
	fprintf(STDERR, "Usage: %s <directory> <jl-file>\nOr: %s <json-file> < jl-data\n", $argv[0], $argv[0]);
	die(1);
}

switch($argc) {
case 2:
	$f = STDIN;
	$outf = $argv[1];
	break;

case 3:
	$f = fopen($argv[2], 'rb');
	assert($f);
	$outf = $argv[1].'/'.pathinfo($argv[2], PATHINFO_FILENAME).'.json';
	break;

default: die(1);
}

$list = file_exists($outf) ? json_decode(file_get_contents($outf), true) : [];
$index = [];

function canonicalize_fen(string $fen): string {
	/* XXX: draws, 3 fold repetition, etc. */

	list($board, $side, $castle, $ep, ) = explode(' ', $fen, 5);
	if($side === 'w') {
		return implode(' ', [ $board, $side, $castle, $ep ]);
	}

	assert($side === 'b');
	$side = 'w';

	if($ep !== '-') {
		assert($ep[1] === '3');
		$ep[1] = '6';
	}

	$castle = strtr($castle, 'KQkq', 'kqKQ');

	return implode(' ', [ $board, $side, $castle, $ep ]);
}

foreach($list as $puz) {
	$canon = canonicalize_fen($puz[0]);
	assert(!isset($index[$canon]));
	$index[$canon] = true;
}

while(($line = fgets($f)) !== false) {
	$puz = json_decode($line, true);
	$canon = canonicalize_fen($puz[0]);
	if(isset($index[$canon])) continue;
	$index[$canon] = true;
	$list[] = $puz;
}

file_put_contents($outf, json_encode($list));
